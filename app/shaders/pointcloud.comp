#version 430 core

uniform vec3 translation;

layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

struct ParticleData
{
	vec4 position;
};

// Particles from previous frame
layout (std430, binding = 0) coherent buffer Particles
{
	ParticleData particles[];
} data;

void main(void)
{
	uint globalId = gl_GlobalInvocationID.x;

	// Retrieve current particle from previous frame
	ParticleData currentParticle = data.particles[globalId];

	// New position = old position + distance traveled over step duration
	currentParticle.position[0] = currentParticle.position[0] + translation[0];
	currentParticle.position[1] = currentParticle.position[1] + translation[1];

	// Save updated particle
	data.particles[globalId] = currentParticle;
}

// vim: ts=3 sw=3 noet ffs=unix :
